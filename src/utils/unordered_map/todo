Member type
complete: key_type
complete: mapped_type
complete: value_type
complete: reference	value_type &
complete: const_reference
complete: iterator	internal class MapIterator<K, T> or BinaryTree::iterator
complete: const_iterator
complete: size_type	size_t

Member functions
test: map()
todo: map(std::initializer_list<value_type> const &items)
todo: map(const map &m)
todo: map(map &&m)
todo: ~map()
todo: operator=(map &&m)

Element access
todo: T& at(const Key& key)
todo: T& operator[](const Key& key)

Iterators
test: iterator begin()
test: iterator end()

Capacity
test: bool empty()
test: size_type size()

Modifiers
test: void clear()
test: std::pair<iterator, bool> insert(const value_type& value)
refactor: iterator insert(const Key& key, const T& obj) need to replace return type
todo: std::pair<iterator, bool> insert_or_assign(const Key& key, const T& obj)
todo: void erase(iterator pos)
test: void swap(map& other)
todo: void merge(map& other)

Lookup
test: bool contains(const Key& key)